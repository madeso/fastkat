cmake_minimum_required (VERSION 2.8)
project(fastkat)

set_property(GLOBAL PROPERTY USE_FOLDERS OFF)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/cmake-modules")

# compiler flags
if(WIN32)
	ADD_DEFINITIONS(/D _CRT_SECURE_NO_WARNINGS)
	
	# character set to Not Set=ASCII/SBCS http://public.kitware.com/Bug/view.php?id=12189
	ADD_DEFINITIONS(/D _SBCS)
else(WIN32)
	#also add c++11 flags
	SET(CMAKE_CXX_FLAGS "-std=c++11 -stdlib=libc++ ${CMAKE_CXX_FLAGS}")
endif(WIN32)

# force visual studio and the like to only have debug and release builds
if(CMAKE_CONFIGURATION_TYPES)
	set(CMAKE_CONFIGURATION_TYPES Debug Release)
	set(CMAKE_CONFIGURATION_TYPES "${CMAKE_CONFIGURATION_TYPES}" CACHE STRING "Reset the configurations to what we need" FORCE)
endif()

# COMPONENTS filesystem program_options serialization system 
find_package(OpenGL REQUIRED)
find_package(AssImp REQUIRED)

# option(BUILD_SHARED_LIBS "build shared libraries" OFF)
set(BUILD_SHARED_LIBS OFF)

# add a target to generate API documentation with Doxygen
include_directories("external/cml-1_0_3")
include_directories("external/glew")

#include_directories("external/LibOVR/Include")

#include_directories(${ASSIMP_INCLUDE_DIR})
include_directories(${CMAKE_SOURCE_DIR})


# message(STATUS "Including Assimp ${ASSIMP_INCLUDE_DIR}")
# message(STATUS "Including Cmake Source ${CMAKE_SOURCE_DIR}")

# include_directories(${CMAKE_CURRENT_BINARY_DIR})

add_subdirectory(fastkat)
